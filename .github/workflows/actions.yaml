name: Private actions test
#! ATTENTION - This event must be created NOT on PUSH but in case of the workflow to fail
on: push
jobs:
  Private_Actions_Test:
    runs-on: ubuntu-latest
    steps:
      #! Copying the repo into the VM
      - uses: actions/checkout@v2.4.0

      #! PRIVATE ISSUE ACTION
      - name: Private Issues Action
        uses: "./.github/actions/issues"
        id: "issues"
        #! Input only accept strings
        with:
          token: ${{ secrets.USER_TOKEN }}
          # In a multiple commit push event
          # This syntax gets the OLDEST COMMIT
          # QUERO O NOME DO BRANCH
          title: "Branch: ${{ github.ref_name }}"
          # This syntax gets the YOUNGEST COMMIT
          #? title: ${{ github.event.commits[0].message }}
          # QUERO MENSAGEM DO COMMIT
          # AUTOR DO BRANCH
          body: "Commit: ${{ github.event.commits[0].message }} - ${{ github.sha }}\n Author: ${{ github.event.pusher.name }} \n Workflow failed!"
          assignees: "OKruel,OKruelNL"

      #! HELLO ACTION
      - name: "Using private HELLO action"
        # Notice the path ends in the folder that contains all necessary files to perfome the action
        uses: "./.github/actions/hello"
        # Gives an id for referencing this step in the next steps
        id: "hello"
        #! Input only accept strings
        with:
          who-to-greet: "Some person"

      #! HELLO-DOCKER ACTION
      - name: "Using private HELLO-DOCKER action"
        # Notice the path ends in the folder that contains all necessary files to perfome the action
        uses: "./.github/actions/hello-docker"
        # Gives an id for referencing this step in the next steps
        id: "hello-docker"
        #! Input only accept strings
        with:
          who-to-greet: "Docker"

      #! Outputs of the private action
      - name: Output to the private action
        # To see the outputs options either dive into the code or print the step object first to check it.
        run: |
          echo "ISSUES: ${{ steps.issues.outputs.issue }}"
          echo "Hello TIME: ${{ steps.hello.outputs.time }}"
          echo "Hello-Docker TIME: ${{ steps.hello-docker.outputs.time }}"
          echo "exported from entrypoint.sh ---- $HELLO"
          echo "JSVAR: $JSVAR"
